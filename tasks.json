{
    "tasks": [
        {
            "type": "shell",
            "label": "C build",
            "command": "${workspaceFolder}/.vscode/search_deps ${file} ${workspaceFolder} | xargs /usr/bin/clang++ -g -I${workspaceFolder} -o ${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension} -std=c++14",
            // "args": [
            //     "-g",
            //     "${file}",
            //     "${relativeFile}",
            //     // "${fileDirname}/*.c",
            //     //"${fileDirname}\\**.h",
            //     "-I${workspaceFolder}",
            //     "-o",
            //     "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}",
            // ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "make_sure_build_directory",
            "command": "/bin/mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/.target/${relativeFileDirname}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "type": "cppbuild",
            "label": "Micro preprocesing",
            "command": "/usr/bin/clang",
            "args": [
                "-fcolor-diagnostics",
                "-P",
                "-E",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}.processed${fileExtname}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for clang to preprocesing micor.",
            "dependsOn": [
                "make_sure_build_directory",
                "Clang format"
            ]
        },
        {
            "type": "cppbuild",
            "label": "Clang Format",
            "command": "/usr/local/opt/llvm/bin/clang-format",
            "args": [
                "-style=Google",
                "-i",
                "${file}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for clang to format c++ code with google style.",
            "dependsOn": []
        },
        {
            "type": "cppbuild",
            "label": "X64 ASM",
            "command": "/usr/bin/clang",
            "args": [
                "-std=c11",
                "-fcolor-diagnostics",
                "-I${workspaceFolder}",
                "-O3",
                "-S",
                "-masm=intel",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}_x64.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "make_sure_build_directory"
            ],
            "detail": "Task for comoile c/c++ code to X86 ASM.",
        },
        {
            "type": "cppbuild",
            "label": "Arm ASM",
            "command": "~/sdk/ndk/23.0.7599858/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang",
            "args": [
                "-std=c11",
                "-std=gnu99", // for use asm("")
                "-fcolor-diagnostics",
                "-target",
                "aarch64-linux-android21",
                // "armv7a-linux-androideabi21",
                // "-g", // 调试会添加过多的信息
                // "-I${workspaceFolder}",
                "-march=armv8.1-a", // https://gcc.gnu.org/onlinedocs/gcc/AArch64-Options.html
                // "-moutline-atomics", // 在运行时确定是否动态支持 v8.1 的原子指令。
                "-O1",
                "-S",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}_arm64_8.1.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile c/c++ code to Arm64 ASM.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "cppbuild",
            "label": "ArmV7 ASM",
            "command": "~/sdk/ndk/23.0.7599858/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang",
            "args": [
                "-std=c11",
                "-fcolor-diagnostics",
                "-target",
                "armv7a-linux-androideabi21",
                // "-g",
                // "-I${workspaceFolder}",
                "-O3",
                "-S",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}_armv7a.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile c/c++ code to Arm64 ASM.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "cppbuild",
            "label": "Only Build",
            "command": "/usr/bin/clang++",
            "args": [
                "-fcolor-diagnostics",
                "-std=c11",
                "-g",
                "-O1",
                "-c",
                "${file}",
                "-o",
                "${workspaceFolder}/.target/${relativeFileDirname}/${fileBasenameNoExtension}_x64.o"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile single file for decomiple.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        }
    ],
    "version": "2.0.0"
}