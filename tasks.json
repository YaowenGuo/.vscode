{
    "tasks": [
        // {
        //     "type": "shell",
        //     "label": "C build",
        //     "command": "${workspaceFolder}/.vscode/search_deps ${file} ${workspaceFolder} | xargs /usr/bin/clang -MJ -g -I${workspaceFolder} -o ${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension} -std=c11 -std=gnu11 -fdiagnostics-color=always",
        //     // "args": [
        //     //     "-g",
        //     //     "${file}",
        //     //     "${relativeFile}",
        //     //     // "${fileDirname}/*.c",
        //     //     //"${fileDirname}\\**.h",
        //     //     "-I${workspaceFolder}",
        //     //     "-o",
        //     //     "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}",
        //     // ],
        //     "options": {
        //         "cwd": "${workspaceFolder}"
        //     },
        //     "problemMatcher": [
        //     ],
        //     "group": {
        //         "kind": "build",
        //         "isDefault": true
        //     },
        //     "detail": "Task generated by Debugger.",
        //     "dependsOn": [
        //         "make_sure_build_directory"
        //     ],
        // },
        {
            "type": "shell",
            "label": "C++ build",
            "command": "${workspaceFolder}/.vscode/search_deps ${file} ${workspaceFolder} | xargs /usr/bin/clang++ -g -I${workspaceFolder} -o ${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension} -std=c++17 -O1 -fdiagnostics-color=always", // -Xclang -fdump-vtable-layouts -Xclang -fdump-record-layouts-simple
            // clang -Xclang -fdump-record-layouts-simple simple.cpp
            //  -Xclang -fdump-record-layouts 导出对象布局
            // -Xclang -fdump-vtable-layouts 输出虚函数表
            // https://stackoverflow.com/questions/51005713/dumping-memory-layout-of-c-object-does-not-work-in-clang
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "C build",
            "command": "cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=Debug ${workspaceFolder} -B ${workspaceFolder}/build && cmake --build ${workspaceFolder}/build",
    
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "make_sure_build_directory",
            "command": "/bin/mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/build/${relativeFileDirname}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "type": "shell",
            "label": "Micro preprocesing",
            "command": "/usr/bin/clang",
            "args": [
                // "-std=c++20",
                // "-std=gnu11",
                "-std=c11",
                "-Wvariadic-macros",
                "-fdiagnostics-color=always",
                "-fcolor-diagnostics",
                "-I${workspaceFolder}",
                "-P",
                "-E",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}.processed${fileExtname}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for clang to preprocesing micor.",
            "dependsOn": [
                "make_sure_build_directory",
                "Clang format"
            ]
        },
        {
            "type": "shell",
            "label": "X64 ASM",
            "command": "clang",
            "args": [
                "-std=c++20",
                "-fcolor-diagnostics",
                "-I${workspaceFolder}",
                "-O3",
                "-S",
                "-masm=intel",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}_x64.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "make_sure_build_directory"
            ],
            "detail": "Task for comoile c/c++ code to X86 ASM.",
        },
        {
            "type": "shell",
            "label": "Arm ASM",
            "command": "~/sdk/ndk/23.1.7779620/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang",
            "args": [
                "-std=c11",
                "-std=gnu99", // for use asm("")
                "-fcolor-diagnostics",
                "-target",
                "aarch64-linux-android21",
                // "-fstack-protector", // 栈保护
                // "armv7a-linux-androideabi21",
                // "-g", // 调试会添加过多的信息
                // "-I${workspaceFolder}",
                "-march=armv8.1-a", // https://gcc.gnu.org/onlinedocs/gcc/AArch64-Options.html
                // "-moutline-atomics", // 在运行时确定是否动态支持 v8.1 的原子指令。
                "-O1",
                "-S",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}_arm64_8.1.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile c/c++ code to Arm64 ASM.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "ArmV7 ASM",
            "command": "~/sdk/ndk/23.1.7779620/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang",
            "args": [
                "-std=c11",
                "-fcolor-diagnostics",
                "-target",
                "armv7a-linux-androideabi21",
                // "-g",
                // "-I${workspaceFolder}",
                "-O3",
                "-S",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}_armv7a.s"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile c/c++ code to Arm64 ASM.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "Only Build",
            "command": "clang++",
            "args": [
                "-fcolor-diagnostics",
                "-std=c11",
                "-g",
                "-O1",
                "-c",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${relativeFileDirname}/${fileBasenameNoExtension}_x64.o"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task for comoile single file for decomiple.",
            "dependsOn": [
                "make_sure_build_directory"
            ],
        },
        {
            "type": "shell",
            "label": "Arm64 Linux Debug Qemu",
            "command": "${workspaceFolder}/.vscode/launch_arm64_linux_debug_qemu",
            "detail": "This task is used for launch a debug QEMU for debug linux kernel.",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "type": "shell",
            "label": "X64 Linux Debug Qemu",
            "command": "${workspaceFolder}/.vscode/launch_x64_linux_debug_qemu",
            "detail": "This task is used for launch a debug QEMU for debug linux kernel.",
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            // "problemMatcher": {
            //     "pattern": {
            //       "regexp": "^qemu-system-(.*)\\s*: QEMU: Terminated via GDBstub$",
            //       "file": 1,
            //       "line": 2,
            //       "column": 3,
            //       "severity": 4,
            //       "message": 5
            //     },
            //     "background": {
            //         "activeOnStart": true,
            //         "beginsPattern": "^QEMU was started.",
            //         "endsPattern": "^qemu-system-(.*)\\s*: QEMU: Terminated via GDBstub$"
            //     }
            // }
        },
    ],
    "version": "2.0.0"
}